#!/bin/sh

# Begin Functions
read_property(){
	input="$@"
	temp=`cat $config_file | sed 's/\"//g' | grep -w $input | cut -d ":" -f2`
	echo ${temp##*|}
}

open_xterm_terminal(){
	local l_server="$1"
	local l_interactive="$2"
	if [ ${l_interactive} = "1" ]; then	
		xterm -title "VPN Book" -hold -e "cd ${default_dir} && ./vpnbook -s ${l_server} -i"
	else
		xterm -title "VPN Book" -hold -e "cd ${default_dir} && ./vpnbook -s ${l_server}"
	fi						
}

is_installed(){
	echo "Checking if $1 is installed..."
	if ! [ -x "$(command -v $1)" ]; then
	  echo "Error: $1 is not installed." >&2
	  exit 1
    else
	  echo "$1 is installed." >&2
	fi
}

check_requiremnts(){
	echo "Checking general Requirements..."
	# Check if git is installed
	is_installed ${terminal_emulator}
}

wait_for_seconds(){
	local seconds="$@"
	echo "waiting ${seconds} seconds before continuing..."
	sleep ${seconds}
}

check_if_up(){
	wait_for_seconds 10
	
	local if_id="$@"
	local if_result=$(ifconfig ${if_id} | grep "${if_id}: flags" | cut -d \: -f1)
	if [ ${if_result} == "${if_id}"  ]; then
		return 1
	else
		return 0
	fi
}
# End Functions

default_dir=${HOME}/.local/scripts
config_file=${default_dir}/vpnbook.config

# Start Script
while [ "$1" != "" ]; do
    case $1 in
        -s | --server )         shift
                                server=$1
                                interactive=0
                                ;;
        -i | --interactive )    interactive=1
                                ;;
        -h | --help )           usage
                                exit
                                ;;
        * )                     usage
                                exit 1
    esac
    shift
done

# Variable Declaration
terminal_emulator=$(read_property terminal_emulator)
vpnbook_if_name=$(read_property vpnbook_if_name)

# Check if the 'tun1' interface is up and running
check_if_up ${vpnbook_if_name}
# The Tunnel is established if the tun1 interface exists
if [ $? -eq 1  ]; then
	echo "Nothing to do here. Vpn Tunnel already established."
	exit 0
fi

# Check if the terminal emulator is installed
is_installed ${terminal_emulator}
echo "Starting VPN conncetion to ${server} and interactive ${interactive}..."

case ${terminal_emulator} in
	xterm | XTERM )		echo "Terminal emulator ${terminal_emulator} is supported."
						open_xterm_terminal ${server} ${interactive}
						;;
	* )					echo "Terminal emulator ${terminal_emulator} not supported."
						exit 1
esac

exit 0
